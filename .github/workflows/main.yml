name: Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build UXTU4Mac Assets
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
           ref: ${{ github.event.pull_request.head.sha }}
           fetch-depth: 0
           
      - name: Clone DirectHW
        run: git clone https://github.com/joevt/directhw.git
        
      - name: Xcodebuild 
        working-directory: ./directhw/DirectHW
        run: xcodebuild -alltargets -project DirectHW.xcodeproj
        
      - name: libs
        working-directory: ./directhw/DirectHW
        run: make libs

      - name: Prepare binaries
        run: |
          brew install cmake
          cd directhw/DirectHW/build
          mkdir -p /tmp/include/DirectHW          
          cp Release/usr/local/include/DirectHW.h /tmp/include/DirectHW
          cp Release/libDirectHW.a  /tmp/include

      - name: Clone and Build pciutils-osx
        run: |
          git clone https://github.com/joevt/pciutils
          cd pciutils
          sed -i -e 's/Frameworks/Frameworks -I\/tmp\/include/' Makefile
          sed -i -e 's/usr\/local\/lib/tmp\/include/' lib/configure
          make
          mkdir -p /tmp/include/pci
          cp lib/*.h /tmp/include/pci
          cp lib/libpci.a /tmp/include

      - name: Clone and Build RyzenAdj
        run: |
          git clone https://github.com/FlyGoat/RyzenAdj.git
          cd RyzenAdj
          sed -i -e 's/${INC_DIR}/\/tmp\/include/' CMakeLists.txt
          sed -i -e 's/${OS_LINK_DIR}/\/tmp\/include/' CMakeLists.txt
          sed -i -e 's/ pci/ pci ZLIB::ZLIB\/a find_package(ZLIB REQUIRED)/' CMakeLists.txt
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          /Applications/Xcode_14.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -framework IOKit
          make
          
      - name: Prepare final product
        run: |
          mkdir -p Artifacts
          cp -r directhw/DirectHW/build/Release/DirectHW.kext Artifacts
          cp RyzenAdj/build/ryzenadj Artifacts
          chmod +x Artifacts/ryzenadj
          
      - name: Set release tag and title
        id: set_release_tag_title
        run: |
           echo "::set-output name=release_tag::Assets"
           echo "::set-output name=release_title::Assets"
        shell: bash

      - name: Install zip and create zip file
        run: |
         zip -r Artifacts.zip Artifacts
        working-directory: ${{ github.workspace }}

      - name: Set up Git
        run: |
         git config --global user.email "github-actions@github.com"
         git config --global user.name "GitHub Actions"

      - name: Update release
        run: |

          if gh release view "${{ steps.set_release_tag_title.outputs.release_tag }}" &>/dev/null; then
          gh release delete "${{ steps.set_release_tag_title.outputs.release_tag }}" --yes
          fi

          gh release create "${{ steps.set_release_tag_title.outputs.release_tag }}" ./Artifacts.zip --title "${{ steps.set_release_tag_title.outputs.release_title }}" --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
